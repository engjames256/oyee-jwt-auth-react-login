{"ast":null,"code":"import history from \"../../../containers/configs/history\";\nimport { baseURL, showErrorNotification, showSuccessNotification } from \"../../../helpers/index\";\nexport const signIn = userInfo => dispatch => {\n  console.log(userInfo);\n  const url = `${baseURL}auth/login/`;\n  fetch(url, {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\"\n    },\n    body: JSON.stringify(userInfo)\n  }).then(response => response.json()).then(data => {\n    if (data.token) {\n      showSuccessNotification(\"You have successfully LogedIn\");\n      localStorage.setItem(\"fm-token\", data.token);\n      history.push(\"/home\");\n    } else {\n      console.log(data);\n      showErrorNotification(\"Login Failed\");\n    }\n  }).catch(error => {}).finally(done => {});\n};\nexport const signUp = userInfo => dispatch => {\n  const url = `${baseURL}auth/register/`;\n  fetch(url, {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\"\n    },\n    body: JSON.stringify(userInfo)\n  }).then(response => response.json()).then(data => {\n    if (data.token) {\n      showSuccessNotification(\"You have successfully registered\");\n      localStorage.setItem(\"fm-token\", data.token);\n      history.push(\"/home\");\n    } else {\n      showErrorNotification(\"Registration failed\");\n    }\n  }).catch(error => {}).finally(done => {});\n};","map":{"version":3,"sources":["/home/oyee/Desktop/oyee-jwt-auth-react-login/frontend/src/redux/actions/auth/Login.js"],"names":["history","baseURL","showErrorNotification","showSuccessNotification","signIn","userInfo","dispatch","console","log","url","fetch","method","headers","body","JSON","stringify","then","response","json","data","token","localStorage","setItem","push","catch","error","finally","done","signUp"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,qCAApB;AACA,SACEC,OADF,EAEEC,qBAFF,EAGEC,uBAHF,QAIO,wBAJP;AAKA,OAAO,MAAMC,MAAM,GAAGC,QAAQ,IAAIC,QAAQ,IAAI;AAC5CC,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACA,QAAMI,GAAG,GAAI,GAAER,OAAQ,aAAvB;AACAS,EAAAA,KAAK,CAACD,GAAD,EAAM;AACTE,IAAAA,MAAM,EAAE,MADC;AAETC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAFA;AAKTC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeV,QAAf;AALG,GAAN,CAAL,CAOGW,IAPH,CAOQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAPpB,EAQGF,IARH,CAQQG,IAAI,IAAI;AACZ,QAAIA,IAAI,CAACC,KAAT,EAAgB;AACdjB,MAAAA,uBAAuB,CAAC,+BAAD,CAAvB;AACAkB,MAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCH,IAAI,CAACC,KAAtC;AACApB,MAAAA,OAAO,CAACuB,IAAR,CAAa,OAAb;AACD,KAJD,MAIO;AACLhB,MAAAA,OAAO,CAACC,GAAR,CAAYW,IAAZ;AACAjB,MAAAA,qBAAqB,CAAC,cAAD,CAArB;AACD;AACF,GAjBH,EAkBGsB,KAlBH,CAkBSC,KAAK,IAAI,CAAE,CAlBpB,EAmBGC,OAnBH,CAmBWC,IAAI,IAAI,CAAE,CAnBrB;AAoBD,CAvBM;AAwBP,OAAO,MAAMC,MAAM,GAAGvB,QAAQ,IAAIC,QAAQ,IAAI;AAC5C,QAAMG,GAAG,GAAI,GAAER,OAAQ,gBAAvB;AACAS,EAAAA,KAAK,CAACD,GAAD,EAAM;AACTE,IAAAA,MAAM,EAAE,MADC;AAETC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAFA;AAKTC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeV,QAAf;AALG,GAAN,CAAL,CAOGW,IAPH,CAOQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAPpB,EAQGF,IARH,CAQQG,IAAI,IAAI;AACZ,QAAIA,IAAI,CAACC,KAAT,EAAgB;AACdjB,MAAAA,uBAAuB,CAAC,kCAAD,CAAvB;AACAkB,MAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCH,IAAI,CAACC,KAAtC;AACApB,MAAAA,OAAO,CAACuB,IAAR,CAAa,OAAb;AACD,KAJD,MAIO;AACLrB,MAAAA,qBAAqB,CAAC,qBAAD,CAArB;AACD;AACF,GAhBH,EAiBGsB,KAjBH,CAiBSC,KAAK,IAAI,CAAE,CAjBpB,EAkBGC,OAlBH,CAkBWC,IAAI,IAAI,CAAE,CAlBrB;AAmBD,CArBM","sourcesContent":["import history from \"../../../containers/configs/history\";\nimport {\n  baseURL,\n  showErrorNotification,\n  showSuccessNotification\n} from \"../../../helpers/index\";\nexport const signIn = userInfo => dispatch => {\n  console.log(userInfo);\n  const url = `${baseURL}auth/login/`;\n  fetch(url, {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\"\n    },\n    body: JSON.stringify(userInfo)\n  })\n    .then(response => response.json())\n    .then(data => {\n      if (data.token) {\n        showSuccessNotification(\"You have successfully LogedIn\");\n        localStorage.setItem(\"fm-token\", data.token);\n        history.push(\"/home\");\n      } else {\n        console.log(data);\n        showErrorNotification(\"Login Failed\");\n      }\n    })\n    .catch(error => {})\n    .finally(done => {});\n};\nexport const signUp = userInfo => dispatch => {\n  const url = `${baseURL}auth/register/`;\n  fetch(url, {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\"\n    },\n    body: JSON.stringify(userInfo)\n  })\n    .then(response => response.json())\n    .then(data => {\n      if (data.token) {\n        showSuccessNotification(\"You have successfully registered\");\n        localStorage.setItem(\"fm-token\", data.token);\n        history.push(\"/home\");\n      } else {\n        showErrorNotification(\"Registration failed\");\n      }\n    })\n    .catch(error => {})\n    .finally(done => {});\n};\n"]},"metadata":{},"sourceType":"module"}