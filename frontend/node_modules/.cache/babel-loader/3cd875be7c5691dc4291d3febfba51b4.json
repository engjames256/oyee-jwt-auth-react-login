{"ast":null,"code":"import { showErrorNotification, showSuccessNotification, baseURL } from \"../../../helpers\";\nexport const addSettings = (settingsData, settings) => dispatch => {\n  const url = `${baseURL}${settings}/`;\n  fetch(url, {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\",\n      authorization: `Token ${localStorage.getItem(\"fm-token\")}`\n    },\n    body: JSON.stringify(settingsData)\n  }).then(response => response.json()).then(data => {\n    if (data.detail) {\n      showErrorNotification(data.detail);\n    } else {\n      showSuccessNotification(\"Successfully added the settings\");\n    }\n  }).catch(error => {}).finally(done => {});\n};\nexport const fetchSettings = settings => dispatch => {\n  const url = `${baseURL}${settings}/`;\n  fetch(url, {\n    method: \"GET\",\n    headers: {\n      \"content-type\": \"application/json\",\n      authorization: `Token ${localStorage.getItem(\"fm-token\")}`\n    }\n  }).then(response => response.json()).then(data => {\n    dispatch({\n      type: settings,\n      payload: data\n    });\n  }).catch(error => {}).finally(done => {});\n};","map":{"version":3,"sources":["/home/oyee/Desktop/oyee-jwt-auth-react-login/frontend/src/redux/actions/settings/settings.js"],"names":["showErrorNotification","showSuccessNotification","baseURL","addSettings","settingsData","settings","dispatch","url","fetch","method","headers","authorization","localStorage","getItem","body","JSON","stringify","then","response","json","data","detail","catch","error","finally","done","fetchSettings","type","payload"],"mappings":"AAAA,SACEA,qBADF,EAEEC,uBAFF,EAGEC,OAHF,QAIO,kBAJP;AAMA,OAAO,MAAMC,WAAW,GAAG,CAACC,YAAD,EAAeC,QAAf,KAA4BC,QAAQ,IAAI;AACjE,QAAMC,GAAG,GAAI,GAAEL,OAAQ,GAAEG,QAAS,GAAlC;AACAG,EAAAA,KAAK,CAACD,GAAD,EAAM;AACTE,IAAAA,MAAM,EAAE,MADC;AAETC,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEPC,MAAAA,aAAa,EAAG,SAAQC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAiC;AAFlD,KAFA;AAMTC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeZ,YAAf;AANG,GAAN,CAAL,CAQGa,IARH,CAQQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EARpB,EASGF,IATH,CASQG,IAAI,IAAI;AACZ,QAAIA,IAAI,CAACC,MAAT,EAAiB;AACfrB,MAAAA,qBAAqB,CAACoB,IAAI,CAACC,MAAN,CAArB;AACD,KAFD,MAEO;AACLpB,MAAAA,uBAAuB,CAAC,iCAAD,CAAvB;AACD;AACF,GAfH,EAgBGqB,KAhBH,CAgBSC,KAAK,IAAI,CAAE,CAhBpB,EAiBGC,OAjBH,CAiBWC,IAAI,IAAI,CAAE,CAjBrB;AAkBD,CApBM;AAsBP,OAAO,MAAMC,aAAa,GAAGrB,QAAQ,IAAIC,QAAQ,IAAI;AACnD,QAAMC,GAAG,GAAI,GAAEL,OAAQ,GAAEG,QAAS,GAAlC;AACAG,EAAAA,KAAK,CAACD,GAAD,EAAM;AACTE,IAAAA,MAAM,EAAE,KADC;AAETC,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEPC,MAAAA,aAAa,EAAG,SAAQC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAiC;AAFlD;AAFA,GAAN,CAAL,CAOGI,IAPH,CAOQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAPpB,EAQGF,IARH,CAQQG,IAAI,IAAI;AACZd,IAAAA,QAAQ,CAAC;AACPqB,MAAAA,IAAI,EAAEtB,QADC;AAEPuB,MAAAA,OAAO,EAAER;AAFF,KAAD,CAAR;AAID,GAbH,EAcGE,KAdH,CAcSC,KAAK,IAAI,CAAE,CAdpB,EAeGC,OAfH,CAeWC,IAAI,IAAI,CAAE,CAfrB;AAgBD,CAlBM","sourcesContent":["import {\n  showErrorNotification,\n  showSuccessNotification,\n  baseURL\n} from \"../../../helpers\";\n\nexport const addSettings = (settingsData, settings) => dispatch => {\n  const url = `${baseURL}${settings}/`;\n  fetch(url, {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\",\n      authorization: `Token ${localStorage.getItem(\"fm-token\")}`\n    },\n    body: JSON.stringify(settingsData)\n  })\n    .then(response => response.json())\n    .then(data => {\n      if (data.detail) {\n        showErrorNotification(data.detail);\n      } else {\n        showSuccessNotification(\"Successfully added the settings\");\n      }\n    })\n    .catch(error => {})\n    .finally(done => {});\n};\n\nexport const fetchSettings = settings => dispatch => {\n  const url = `${baseURL}${settings}/`;\n  fetch(url, {\n    method: \"GET\",\n    headers: {\n      \"content-type\": \"application/json\",\n      authorization: `Token ${localStorage.getItem(\"fm-token\")}`\n    }\n  })\n    .then(response => response.json())\n    .then(data => {\n      dispatch({\n        type: settings,\n        payload: data\n      });\n    })\n    .catch(error => {})\n    .finally(done => {});\n};\n"]},"metadata":{},"sourceType":"module"}